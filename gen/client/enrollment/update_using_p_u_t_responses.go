// Code generated by go-swagger; DO NOT EDIT.

package enrollment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateUsingPUTReader is a Reader for the UpdateUsingPUT structure.
type UpdateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateUsingPUTAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateUsingPUTCreated creates a UpdateUsingPUTCreated with default headers values
func NewUpdateUsingPUTCreated() *UpdateUsingPUTCreated {
	return &UpdateUsingPUTCreated{}
}

/*UpdateUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateUsingPUTCreated struct {
}

func (o *UpdateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTCreated ", 201)
}

func (o *UpdateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTAccepted creates a UpdateUsingPUTAccepted with default headers values
func NewUpdateUsingPUTAccepted() *UpdateUsingPUTAccepted {
	return &UpdateUsingPUTAccepted{}
}

/*UpdateUsingPUTAccepted handles this case with default header values.

Request accepted
*/
type UpdateUsingPUTAccepted struct {
}

func (o *UpdateUsingPUTAccepted) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTAccepted ", 202)
}

func (o *UpdateUsingPUTAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTBadRequest creates a UpdateUsingPUTBadRequest with default headers values
func NewUpdateUsingPUTBadRequest() *UpdateUsingPUTBadRequest {
	return &UpdateUsingPUTBadRequest{}
}

/*UpdateUsingPUTBadRequest handles this case with default header values.

Bad Request
*/
type UpdateUsingPUTBadRequest struct {
}

func (o *UpdateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTBadRequest ", 400)
}

func (o *UpdateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTUnauthorized creates a UpdateUsingPUTUnauthorized with default headers values
func NewUpdateUsingPUTUnauthorized() *UpdateUsingPUTUnauthorized {
	return &UpdateUsingPUTUnauthorized{}
}

/*UpdateUsingPUTUnauthorized handles this case with default header values.

Not authorized
*/
type UpdateUsingPUTUnauthorized struct {
}

func (o *UpdateUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTUnauthorized ", 401)
}

func (o *UpdateUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTForbidden creates a UpdateUsingPUTForbidden with default headers values
func NewUpdateUsingPUTForbidden() *UpdateUsingPUTForbidden {
	return &UpdateUsingPUTForbidden{}
}

/*UpdateUsingPUTForbidden handles this case with default header values.

Access forbidden
*/
type UpdateUsingPUTForbidden struct {
}

func (o *UpdateUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTForbidden ", 403)
}

func (o *UpdateUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTNotFound creates a UpdateUsingPUTNotFound with default headers values
func NewUpdateUsingPUTNotFound() *UpdateUsingPUTNotFound {
	return &UpdateUsingPUTNotFound{}
}

/*UpdateUsingPUTNotFound handles this case with default header values.

Not found
*/
type UpdateUsingPUTNotFound struct {
}

func (o *UpdateUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTNotFound ", 404)
}

func (o *UpdateUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTInternalServerError creates a UpdateUsingPUTInternalServerError with default headers values
func NewUpdateUsingPUTInternalServerError() *UpdateUsingPUTInternalServerError {
	return &UpdateUsingPUTInternalServerError{}
}

/*UpdateUsingPUTInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateUsingPUTInternalServerError struct {
}

func (o *UpdateUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/enrollments][%d] updateUsingPUTInternalServerError ", 500)
}

func (o *UpdateUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
