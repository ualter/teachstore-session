// Code generated by go-swagger; DO NOT EDIT.

package enrollment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// FindByCourseUsingGETReader is a Reader for the FindByCourseUsingGET structure.
type FindByCourseUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindByCourseUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindByCourseUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFindByCourseUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFindByCourseUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindByCourseUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindByCourseUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFindByCourseUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindByCourseUsingGETOK creates a FindByCourseUsingGETOK with default headers values
func NewFindByCourseUsingGETOK() *FindByCourseUsingGETOK {
	return &FindByCourseUsingGETOK{}
}

/*FindByCourseUsingGETOK handles this case with default header values.

Request succeeded
*/
type FindByCourseUsingGETOK struct {
	Payload []interface{}
}

func (o *FindByCourseUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/course/{id}][%d] findByCourseUsingGETOK  %+v", 200, o.Payload)
}

func (o *FindByCourseUsingGETOK) GetPayload() []interface{} {
	return o.Payload
}

func (o *FindByCourseUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindByCourseUsingGETBadRequest creates a FindByCourseUsingGETBadRequest with default headers values
func NewFindByCourseUsingGETBadRequest() *FindByCourseUsingGETBadRequest {
	return &FindByCourseUsingGETBadRequest{}
}

/*FindByCourseUsingGETBadRequest handles this case with default header values.

Bad Request
*/
type FindByCourseUsingGETBadRequest struct {
}

func (o *FindByCourseUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/course/{id}][%d] findByCourseUsingGETBadRequest ", 400)
}

func (o *FindByCourseUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByCourseUsingGETUnauthorized creates a FindByCourseUsingGETUnauthorized with default headers values
func NewFindByCourseUsingGETUnauthorized() *FindByCourseUsingGETUnauthorized {
	return &FindByCourseUsingGETUnauthorized{}
}

/*FindByCourseUsingGETUnauthorized handles this case with default header values.

Not authorized
*/
type FindByCourseUsingGETUnauthorized struct {
}

func (o *FindByCourseUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/course/{id}][%d] findByCourseUsingGETUnauthorized ", 401)
}

func (o *FindByCourseUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByCourseUsingGETForbidden creates a FindByCourseUsingGETForbidden with default headers values
func NewFindByCourseUsingGETForbidden() *FindByCourseUsingGETForbidden {
	return &FindByCourseUsingGETForbidden{}
}

/*FindByCourseUsingGETForbidden handles this case with default header values.

Access forbidden
*/
type FindByCourseUsingGETForbidden struct {
}

func (o *FindByCourseUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/course/{id}][%d] findByCourseUsingGETForbidden ", 403)
}

func (o *FindByCourseUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByCourseUsingGETNotFound creates a FindByCourseUsingGETNotFound with default headers values
func NewFindByCourseUsingGETNotFound() *FindByCourseUsingGETNotFound {
	return &FindByCourseUsingGETNotFound{}
}

/*FindByCourseUsingGETNotFound handles this case with default header values.

Not found
*/
type FindByCourseUsingGETNotFound struct {
}

func (o *FindByCourseUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/course/{id}][%d] findByCourseUsingGETNotFound ", 404)
}

func (o *FindByCourseUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByCourseUsingGETInternalServerError creates a FindByCourseUsingGETInternalServerError with default headers values
func NewFindByCourseUsingGETInternalServerError() *FindByCourseUsingGETInternalServerError {
	return &FindByCourseUsingGETInternalServerError{}
}

/*FindByCourseUsingGETInternalServerError handles this case with default header values.

Internal Server Error
*/
type FindByCourseUsingGETInternalServerError struct {
}

func (o *FindByCourseUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/course/{id}][%d] findByCourseUsingGETInternalServerError ", 500)
}

func (o *FindByCourseUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
