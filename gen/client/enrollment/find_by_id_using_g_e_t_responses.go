// Code generated by go-swagger; DO NOT EDIT.

package enrollment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ualter/teachstore-session/gen/models"
)

// FindByIDUsingGETReader is a Reader for the FindByIDUsingGET structure.
type FindByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFindByIDUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFindByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFindByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindByIDUsingGETOK creates a FindByIDUsingGETOK with default headers values
func NewFindByIDUsingGETOK() *FindByIDUsingGETOK {
	return &FindByIDUsingGETOK{}
}

/*FindByIDUsingGETOK handles this case with default header values.

Request succeeded
*/
type FindByIDUsingGETOK struct {
	Payload *models.Enrollment
}

func (o *FindByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/{id}][%d] findByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *FindByIDUsingGETOK) GetPayload() *models.Enrollment {
	return o.Payload
}

func (o *FindByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Enrollment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindByIDUsingGETBadRequest creates a FindByIDUsingGETBadRequest with default headers values
func NewFindByIDUsingGETBadRequest() *FindByIDUsingGETBadRequest {
	return &FindByIDUsingGETBadRequest{}
}

/*FindByIDUsingGETBadRequest handles this case with default header values.

Bad Request
*/
type FindByIDUsingGETBadRequest struct {
}

func (o *FindByIDUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/{id}][%d] findByIdUsingGETBadRequest ", 400)
}

func (o *FindByIDUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDUsingGETUnauthorized creates a FindByIDUsingGETUnauthorized with default headers values
func NewFindByIDUsingGETUnauthorized() *FindByIDUsingGETUnauthorized {
	return &FindByIDUsingGETUnauthorized{}
}

/*FindByIDUsingGETUnauthorized handles this case with default header values.

Not authorized
*/
type FindByIDUsingGETUnauthorized struct {
}

func (o *FindByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/{id}][%d] findByIdUsingGETUnauthorized ", 401)
}

func (o *FindByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDUsingGETForbidden creates a FindByIDUsingGETForbidden with default headers values
func NewFindByIDUsingGETForbidden() *FindByIDUsingGETForbidden {
	return &FindByIDUsingGETForbidden{}
}

/*FindByIDUsingGETForbidden handles this case with default header values.

Access forbidden
*/
type FindByIDUsingGETForbidden struct {
}

func (o *FindByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/{id}][%d] findByIdUsingGETForbidden ", 403)
}

func (o *FindByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDUsingGETNotFound creates a FindByIDUsingGETNotFound with default headers values
func NewFindByIDUsingGETNotFound() *FindByIDUsingGETNotFound {
	return &FindByIDUsingGETNotFound{}
}

/*FindByIDUsingGETNotFound handles this case with default header values.

Not found
*/
type FindByIDUsingGETNotFound struct {
}

func (o *FindByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/{id}][%d] findByIdUsingGETNotFound ", 404)
}

func (o *FindByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDUsingGETInternalServerError creates a FindByIDUsingGETInternalServerError with default headers values
func NewFindByIDUsingGETInternalServerError() *FindByIDUsingGETInternalServerError {
	return &FindByIDUsingGETInternalServerError{}
}

/*FindByIDUsingGETInternalServerError handles this case with default header values.

Internal Server Error
*/
type FindByIDUsingGETInternalServerError struct {
}

func (o *FindByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/enrollments/{id}][%d] findByIdUsingGETInternalServerError ", 500)
}

func (o *FindByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
